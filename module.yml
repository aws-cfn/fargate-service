---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'cfn-modules: Fargate service'
# cfn-modules:implements()
Parameters:
  VpcModule:
    Description: 'Stack name of vpc module.'
    Type: String
  ClusterModule:
    Description: 'Optional stack name of ecs-cluster module (if empty, an ECS cluster is created).'
    Type: String
    Default: ''
  TargetModule:
    Description: 'Optional stack name of module implementing Target.'
    Type: String
    Default: ''
  AlertingModule:
    Description: 'Optional but recommended stack name of alerting module.'
    Type: String
    Default: ''
  ClientSgModule1:
    Description: 'Optional stack name of client-sg module to mark traffic from EC2 instance.'
    Type: String
    Default: ''
  ClientSgModule2:
    Description: 'Optional stack name of client-sg module to mark traffic from EC2 instance.'
    Type: String
    Default: ''
  ClientSgModule3:
    Description: 'Optional stack name of client-sg module to mark traffic from EC2 instance.'
    Type: String
    Default: ''
  ManagedPolicyArns:
    Description: 'Comma-delimited list of IAM managed policy ARNs to attach to the task''s IAM role'
    Type: String
    Default: ''
  ProxyImage:
    Description: 'Optional Docker image to use for the proxy container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: ''
  ProxyPort:
    Description: 'The port exposed by the proxy container that receives traffic from the load balancer (ProxyPort <> AppPort <> SidecarPort; ignored if ProxyImage is not set).'
    Type: Number
    Default: 8000
    MinValue: 1
    MaxValue: 49150
  ProxyEnvironment01:
    Description: 'Optional environment variable 01 for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment02:
    Description: 'Optional environment variable 02 for proxy container.'
    Type: String
    Default: ''
  ProxyEnvironment03:
    Description: 'Optional environment variable 03 for proxy container.'
    Type: String
    Default: ''
  AppImage:
    Description: 'The Docker image to use for the app container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: 'widdix/hello:v1'
  AppPort:
    Description: 'The port exposed by the app container that receives traffic from the load balancer or the proxy container (AppPort <> ProxyPort <> SidecarPort).'
    Type: Number
    Default: 80
    MinValue: 1
    MaxValue: 49150
  AppEnvironment01:
    Description: 'Optional environment variable 01 for app container.'
    Type: String
    Default: ''
  AppEnvironment02:
    Description: 'Optional environment variable 02 for app container.'
    Type: String
    Default: ''
  AppEnvironment03:
    Description: 'Optional environment variable 03 for app container.'
    Type: String
    Default: ''
  AppEnvironment04:
    Description: 'Optional environment variable 04 for app container.'
    Type: String
    Default: ''
  AppEnvironment05:
    Description: 'Optional environment variable 05 for app container.'
    Type: String
    Default: ''
  AppEnvironment06:
    Description: 'Optional environment variable 06 for app container.'
    Type: String
    Default: ''
  AppEnvironment07:
    Description: 'Optional environment variable 07 for app container.'
    Type: String
    Default: ''
  AppEnvironment08:
    Description: 'Optional environment variable 08 for app container.'
    Type: String
    Default: ''
  AppEnvironment09:
    Description: 'Optional environment variable 09 for app container.'
    Type: String
    Default: ''
  AppEnvironment10:
    Description: 'Optional environment variable 10 for app container.'
    Type: String
    Default: ''
  AppEnvironment11:
    Description: 'Optional environment variable 11 for app container.'
    Type: String
    Default: ''
  AppEnvironment12:
    Description: 'Optional environment variable 12 for app container.'
    Type: String
    Default: ''
  AppEnvironment13:
    Description: 'Optional environment variable 13 for app container.'
    Type: String
    Default: ''
  AppEnvironment14:
    Description: 'Optional environment variable 14 for app container.'
    Type: String
    Default: ''
  AppEnvironment15:
    Description: 'Optional environment variable 15 for app container.'
    Type: String
    Default: ''
  AppEnvironment16:
    Description: 'Optional environment variable 16 for app container.'
    Type: String
    Default: ''
  AppEnvironment17:
    Description: 'Optional environment variable 17 for app container.'
    Type: String
    Default: ''
  AppEnvironment18:
    Description: 'Optional environment variable 18 for app container.'
    Type: String
    Default: ''
  AppEnvironment19:
    Description: 'Optional environment variable 19 for app container.'
    Type: String
    Default: ''
  AppEnvironment20:
    Description: 'Optional environment variable 20 for app container.'
    Type: String
    Default: ''
  AppEnvironment21:
    Description: 'Optional environment variable 21 for app container.'
    Type: String
    Default: ''
  AppEnvironment22:
    Description: 'Optional environment variable 22 for app container.'
    Type: String
    Default: ''
  AppEnvironment23:
    Description: 'Optional environment variable 23 for app container.'
    Type: String
    Default: ''
  AppEnvironment24:
    Description: 'Optional environment variable 24 for app container.'
    Type: String
    Default: ''
  AppEnvironment25:
    Description: 'Optional environment variable 25 for app container.'
    Type: String
    Default: ''
  AppEnvironment26:
    Description: 'Optional environment variable 26 for app container.'
    Type: String
    Default: ''
  AppEnvironment27:
    Description: 'Optional environment variable 27 for app container.'
    Type: String
    Default: ''
  AppEnvironment28:
    Description: 'Optional environment variable 28 for app container.'
    Type: String
    Default: ''
  AppEnvironment29:
    Description: 'Optional environment variable 29 for app container.'
    Type: String
    Default: ''
  AppEnvironment30:
    Description: 'Optional environment variable 30 for app container.'
    Type: String
    Default: ''
  SidecarImage:
    Description: 'Optional Docker image to use for the sidecar container. You can use images in the Docker Hub registry or specify other repositories (repository-url/image:tag).'
    Type: String
    Default: ''
  SidecarPort:
    Description: 'The port exposed by the sidecar container reachable from the app container on host localhost (SidecarPort <> ProxyPort <> AppPort).'
    Type: Number
    Default: 9000
    MinValue: 1
    MaxValue: 49150
  SidecarEnvironment01:
    Description: 'Optional environment variable 01 for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment02:
    Description: 'Optional environment variable 02 for sidecar container.'
    Type: String
    Default: ''
  SidecarEnvironment03:
    Description: 'Optional environment variable 03 for sidecar container.'
    Type: String
    Default: ''
  Cpu:
    Description: 'The minimum number of vCPUs to reserve for the container.'
    Type: String
    Default: '0.25'
    AllowedValues: ['0.25', '0.5', '1', '2', '4']
  Memory:
    Description: 'The amount (in GB) of memory used by the task.'
    Type: String
    Default: '0.5'
    AllowedValues: ['0.5', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30']
  DesiredCount:
    Description: 'The number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 2
    ConstraintDescription: 'Must be >= 1'
    MinValue: 1
  MaxCapacity:
    Description: 'The maximum number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 4
    ConstraintDescription: 'Must be >= 1'
    MinValue: 1
  MinCapacity:
    Description: 'The minimum number of simultaneous tasks, that you want to run on the cluster.'
    Type: Number
    Default: 2
    ConstraintDescription: 'Must be >= 1'
    MinValue: 1
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events in the specified log group.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  SubnetsReach:
    Description: 'Should the service have direct access to the Internet or do you prefer private subnets with NAT?'
    Type: String
    Default: Public
    AllowedValues:
    - Public
    - Private
  AutoScaling:
    Description: 'Scale number of tasks based on CPU load?'
    Type: String
    Default: 'true'
    AllowedValues: ['true', 'false']
  HealthCheckGracePeriodSeconds:
    Description: 'The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started (ignored if TargetModule is not set).'
    Type: Number
    Default: 60
    MinValue: 0
    MaxValue: 1800
Mappings:
  CpuMap:
    '0.25':
      Cpu: 256
    '0.5':
      Cpu: 512
    '1':
      Cpu: 1024
    '2':
      Cpu: 2048
    '4':
      Cpu: 4096
  MemoryMap:
    '0.5':
      Memory: 512
    '1':
      Memory: 1024
    '2':
      Memory: 2048
    '3':
      Memory: 3072
    '4':
      Memory: 4096
    '5':
      Memory: 5120
    '6':
      Memory: 6144
    '7':
      Memory: 7168
    '8':
      Memory: 8192
    '9':
      Memory: 9216
    '10':
      Memory: 10240
    '11':
      Memory: 11264
    '12':
      Memory: 12288
    '13':
      Memory: 13312
    '14':
      Memory: 14336
    '15':
      Memory: 15360
    '16':
      Memory: 16384
    '17':
      Memory: 17408
    '18':
      Memory: 18432
    '19':
      Memory: 19456
    '20':
      Memory: 20480
    '21':
      Memory: 21504
    '22':
      Memory: 22528
    '23':
      Memory: 23552
    '24':
      Memory: 24576
    '25':
      Memory: 25600
    '26':
      Memory: 26624
    '27':
      Memory: 27648
    '28':
      Memory: 28672
    '29':
      Memory: 29696
    '30':
      Memory: 30720
Conditions:
  HasNotClusterModule: !Equals [!Ref ClusterModule, '']
  HasClusterModule: !Not [!Condition HasNotClusterModule]
  HasTargetModule: !Not [!Equals [!Ref TargetModule, '']]
  HasNotTargetModule: !Not [!Condition HasTargetModule]
  HasAlertingModule: !Not [!Equals [!Ref AlertingModule, '']]
  HasClientSgModule1: !Not [!Equals [!Ref ClientSgModule1, '']]
  HasClientSgModule2: !Not [!Equals [!Ref ClientSgModule2, '']]
  HasClientSgModule3: !Not [!Equals [!Ref ClientSgModule3, '']]
  HasSubnetsReachPublic: !Equals [!Ref SubnetsReach, Public]
  HasAutoScaling: !Equals [!Ref AutoScaling, 'true']
  HasManagedPolicyArns: !Not [!Equals [!Ref ManagedPolicyArns, '']]
  HasAppEnvironment01: !Not [!Equals [!Ref AppEnvironment01, '']]
  HasAppEnvironment02: !Not [!Equals [!Ref AppEnvironment02, '']]
  HasAppEnvironment03: !Not [!Equals [!Ref AppEnvironment03, '']]
  HasAppEnvironment04: !Not [!Equals [!Ref AppEnvironment04, '']]
  HasAppEnvironment05: !Not [!Equals [!Ref AppEnvironment05, '']]
  HasAppEnvironment06: !Not [!Equals [!Ref AppEnvironment06, '']]
  HasAppEnvironment07: !Not [!Equals [!Ref AppEnvironment07, '']]
  HasAppEnvironment08: !Not [!Equals [!Ref AppEnvironment08, '']]
  HasAppEnvironment09: !Not [!Equals [!Ref AppEnvironment09, '']]
  HasAppEnvironment10: !Not [!Equals [!Ref AppEnvironment10, '']]
  HasAppEnvironment11: !Not [!Equals [!Ref AppEnvironment11, '']]
  HasAppEnvironment12: !Not [!Equals [!Ref AppEnvironment12, '']]
  HasAppEnvironment13: !Not [!Equals [!Ref AppEnvironment13, '']]
  HasAppEnvironment14: !Not [!Equals [!Ref AppEnvironment14, '']]
  HasAppEnvironment15: !Not [!Equals [!Ref AppEnvironment15, '']]
  HasAppEnvironment16: !Not [!Equals [!Ref AppEnvironment16, '']]
  HasAppEnvironment17: !Not [!Equals [!Ref AppEnvironment17, '']]
  HasAppEnvironment18: !Not [!Equals [!Ref AppEnvironment18, '']]
  HasAppEnvironment19: !Not [!Equals [!Ref AppEnvironment19, '']]
  HasAppEnvironment20: !Not [!Equals [!Ref AppEnvironment20, '']]
  HasAppEnvironment21: !Not [!Equals [!Ref AppEnvironment21, '']]
  HasAppEnvironment22: !Not [!Equals [!Ref AppEnvironment22, '']]
  HasAppEnvironment23: !Not [!Equals [!Ref AppEnvironment23, '']]
  HasAppEnvironment24: !Not [!Equals [!Ref AppEnvironment24, '']]
  HasAppEnvironment25: !Not [!Equals [!Ref AppEnvironment25, '']]
  HasAppEnvironment26: !Not [!Equals [!Ref AppEnvironment26, '']]
  HasAppEnvironment27: !Not [!Equals [!Ref AppEnvironment27, '']]
  HasAppEnvironment28: !Not [!Equals [!Ref AppEnvironment28, '']]
  HasAppEnvironment29: !Not [!Equals [!Ref AppEnvironment29, '']]
  HasAppEnvironment30: !Not [!Equals [!Ref AppEnvironment30, '']]
  HasProxyImage: !Not [!Equals [!Ref ProxyImage, '']]
  HasProxyEnvironment01: !Not [!Equals [!Ref ProxyEnvironment01, '']]
  HasProxyEnvironment02: !Not [!Equals [!Ref ProxyEnvironment02, '']]
  HasProxyEnvironment03: !Not [!Equals [!Ref ProxyEnvironment03, '']]
  HasSidecarImage: !Not [!Equals [!Ref SidecarImage, '']]
  HasSidecarEnvironment01: !Not [!Equals [!Ref SidecarEnvironment01, '']]
  HasSidecarEnvironment02: !Not [!Equals [!Ref SidecarEnvironment02, '']]
  HasSidecarEnvironment03: !Not [!Equals [!Ref SidecarEnvironment03, '']]
Resources:
  Cluster:
    Condition: HasNotClusterModule
    Type: 'AWS::ECS::Cluster'
    Properties: {}
  TaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy # https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_execution_IAM_role.html
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - 'ecr:GetAuthorizationToken'
            - 'ecr:BatchCheckLayerAvailability'
            - 'ecr:GetDownloadUrlForLayer'
            - 'ecr:BatchGetImage'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: !GetAtt 'LogGroup.Arn'
  TaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ecs-tasks.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns: !If [HasManagedPolicyArns, !Split [',', !Ref ManagedPolicyArns], !Ref 'AWS::NoValue']
  TaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
      - !If
        - HasProxyImage
        - Name: proxy
          Image: !Ref ProxyImage
          PortMappings:
          - !If [HasTargetModule, {ContainerPort: !Ref ProxyPort, Protocol: tcp}, !Ref 'AWS::NoValue']
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              'awslogs-region': !Ref 'AWS::Region'
              'awslogs-group': !Ref LogGroup
              'awslogs-stream-prefix': proxy
          Environment:
          - !If [HasProxyEnvironment01, {Name: !Select [0, !Split ['=', !Ref ProxyEnvironment01]], Value: !Select [1, !Split ['=', !Ref ProxyEnvironment01]]}, !Ref 'AWS::NoValue']
          - !If [HasProxyEnvironment02, {Name: !Select [0, !Split ['=', !Ref ProxyEnvironment02]], Value: !Select [1, !Split ['=', !Ref ProxyEnvironment02]]}, !Ref 'AWS::NoValue']
          - !If [HasProxyEnvironment03, {Name: !Select [0, !Split ['=', !Ref ProxyEnvironment03]], Value: !Select [1, !Split ['=', !Ref ProxyEnvironment03]]}, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      - Name: app
        Image: !Ref AppImage
        PortMappings:
        - !If [HasProxyImage, {ContainerPort: !Ref AppPort, Protocol: tcp}, !If [HasTargetModule, {ContainerPort: !Ref AppPort, Protocol: tcp}, !Ref 'AWS::NoValue']]
        Essential: true
        LogConfiguration:
          LogDriver: awslogs
          Options:
            'awslogs-region': !Ref 'AWS::Region'
            'awslogs-group': !Ref LogGroup
            'awslogs-stream-prefix': app
        Environment:
        - !If [HasAppEnvironment01, {Name: !Select [0, !Split ['=', !Ref AppEnvironment01]], Value: !Select [1, !Split ['=', !Ref AppEnvironment01]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment02, {Name: !Select [0, !Split ['=', !Ref AppEnvironment02]], Value: !Select [1, !Split ['=', !Ref AppEnvironment02]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment03, {Name: !Select [0, !Split ['=', !Ref AppEnvironment03]], Value: !Select [1, !Split ['=', !Ref AppEnvironment03]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment04, {Name: !Select [0, !Split ['=', !Ref AppEnvironment04]], Value: !Select [1, !Split ['=', !Ref AppEnvironment04]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment05, {Name: !Select [0, !Split ['=', !Ref AppEnvironment05]], Value: !Select [1, !Split ['=', !Ref AppEnvironment05]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment06, {Name: !Select [0, !Split ['=', !Ref AppEnvironment06]], Value: !Select [1, !Split ['=', !Ref AppEnvironment06]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment07, {Name: !Select [0, !Split ['=', !Ref AppEnvironment07]], Value: !Select [1, !Split ['=', !Ref AppEnvironment07]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment08, {Name: !Select [0, !Split ['=', !Ref AppEnvironment08]], Value: !Select [1, !Split ['=', !Ref AppEnvironment08]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment09, {Name: !Select [0, !Split ['=', !Ref AppEnvironment09]], Value: !Select [1, !Split ['=', !Ref AppEnvironment09]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment10, {Name: !Select [0, !Split ['=', !Ref AppEnvironment10]], Value: !Select [1, !Split ['=', !Ref AppEnvironment10]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment11, {Name: !Select [0, !Split ['=', !Ref AppEnvironment11]], Value: !Select [1, !Split ['=', !Ref AppEnvironment11]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment12, {Name: !Select [0, !Split ['=', !Ref AppEnvironment12]], Value: !Select [1, !Split ['=', !Ref AppEnvironment12]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment13, {Name: !Select [0, !Split ['=', !Ref AppEnvironment13]], Value: !Select [1, !Split ['=', !Ref AppEnvironment13]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment14, {Name: !Select [0, !Split ['=', !Ref AppEnvironment14]], Value: !Select [1, !Split ['=', !Ref AppEnvironment14]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment15, {Name: !Select [0, !Split ['=', !Ref AppEnvironment15]], Value: !Select [1, !Split ['=', !Ref AppEnvironment15]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment16, {Name: !Select [0, !Split ['=', !Ref AppEnvironment16]], Value: !Select [1, !Split ['=', !Ref AppEnvironment16]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment17, {Name: !Select [0, !Split ['=', !Ref AppEnvironment17]], Value: !Select [1, !Split ['=', !Ref AppEnvironment17]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment18, {Name: !Select [0, !Split ['=', !Ref AppEnvironment18]], Value: !Select [1, !Split ['=', !Ref AppEnvironment18]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment19, {Name: !Select [0, !Split ['=', !Ref AppEnvironment19]], Value: !Select [1, !Split ['=', !Ref AppEnvironment19]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment20, {Name: !Select [0, !Split ['=', !Ref AppEnvironment20]], Value: !Select [1, !Split ['=', !Ref AppEnvironment20]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment21, {Name: !Select [0, !Split ['=', !Ref AppEnvironment21]], Value: !Select [1, !Split ['=', !Ref AppEnvironment21]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment22, {Name: !Select [0, !Split ['=', !Ref AppEnvironment22]], Value: !Select [1, !Split ['=', !Ref AppEnvironment22]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment23, {Name: !Select [0, !Split ['=', !Ref AppEnvironment23]], Value: !Select [1, !Split ['=', !Ref AppEnvironment23]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment24, {Name: !Select [0, !Split ['=', !Ref AppEnvironment24]], Value: !Select [1, !Split ['=', !Ref AppEnvironment24]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment25, {Name: !Select [0, !Split ['=', !Ref AppEnvironment25]], Value: !Select [1, !Split ['=', !Ref AppEnvironment25]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment26, {Name: !Select [0, !Split ['=', !Ref AppEnvironment26]], Value: !Select [1, !Split ['=', !Ref AppEnvironment26]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment27, {Name: !Select [0, !Split ['=', !Ref AppEnvironment27]], Value: !Select [1, !Split ['=', !Ref AppEnvironment27]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment28, {Name: !Select [0, !Split ['=', !Ref AppEnvironment28]], Value: !Select [1, !Split ['=', !Ref AppEnvironment28]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment29, {Name: !Select [0, !Split ['=', !Ref AppEnvironment29]], Value: !Select [1, !Split ['=', !Ref AppEnvironment29]]}, !Ref 'AWS::NoValue']
        - !If [HasAppEnvironment30, {Name: !Select [0, !Split ['=', !Ref AppEnvironment30]], Value: !Select [1, !Split ['=', !Ref AppEnvironment30]]}, !Ref 'AWS::NoValue']
      - !If
        - HasSidecarImage
        - Name: sidecar
          Image: !Ref SidecarImage
          PortMappings:
          - ContainerPort: !Ref SidecarPort
            Protocol: tcp
          Essential: false
          LogConfiguration:
            LogDriver: awslogs
            Options:
              'awslogs-region': !Ref 'AWS::Region'
              'awslogs-group': !Ref LogGroup
              'awslogs-stream-prefix': sidecar
          Environment:
          - !If [HasSidecarEnvironment01, {Name: !Select [0, !Split ['=', !Ref SidecarEnvironment01]], Value: !Select [1, !Split ['=', !Ref SidecarEnvironment01]]}, !Ref 'AWS::NoValue']
          - !If [HasSidecarEnvironment02, {Name: !Select [0, !Split ['=', !Ref SidecarEnvironment02]], Value: !Select [1, !Split ['=', !Ref SidecarEnvironment02]]}, !Ref 'AWS::NoValue']
          - !If [HasSidecarEnvironment03, {Name: !Select [0, !Split ['=', !Ref SidecarEnvironment03]], Value: !Select [1, !Split ['=', !Ref SidecarEnvironment03]]}, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      Cpu: !FindInMap [CpuMap, !Ref Cpu, Cpu]
      ExecutionRoleArn: !GetAtt 'TaskExecutionRole.Arn'
      Family: !Ref 'AWS::StackName'
      Memory: !FindInMap [MemoryMap, !Ref Memory, Memory]
      NetworkMode: awsvpc
      RequiresCompatibilities: [FARGATE]
      TaskRoleArn: !GetAtt 'TaskRole.Arn'
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: !Ref LogsRetentionInDays
  SecurityGroup:
    Condition: HasNotTargetModule
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: {'Fn::ImportValue': !Sub '${VpcModule}-Id'}
  Service:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !If [HasClusterModule, {'Fn::ImportValue': !Sub '${ClusterModule}-Name'}, !Ref Cluster]
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: !Ref DesiredCount
      HealthCheckGracePeriodSeconds: !If [HasTargetModule, !Ref HealthCheckGracePeriodSeconds, !Ref 'AWS::NoValue']
      LaunchType: FARGATE
      LoadBalancers:
      - !If [HasTargetModule, {ContainerName: !If [HasProxyImage, proxy, app], ContainerPort: !If [HasProxyImage, !Ref ProxyPort, !Ref AppPort], TargetGroupArn: {'Fn::ImportValue': !Sub '${TargetModule}-Arn'}}, !Ref 'AWS::NoValue']
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: !If [HasSubnetsReachPublic, ENABLED, DISABLED]
          SecurityGroups:
          - !If [HasTargetModule, {'Fn::ImportValue': !Sub '${TargetModule}-SecurityGroupId'}, !Ref SecurityGroup]
          - !If [HasClientSgModule1, {'Fn::ImportValue': !Sub '${ClientSgModule1}-SecurityGroupId'}, !Ref 'AWS::NoValue']
          - !If [HasClientSgModule2, {'Fn::ImportValue': !Sub '${ClientSgModule2}-SecurityGroupId'}, !Ref 'AWS::NoValue']
          - !If [HasClientSgModule3, {'Fn::ImportValue': !Sub '${ClientSgModule3}-SecurityGroupId'}, !Ref 'AWS::NoValue']
          Subnets: !Split [',', {'Fn::ImportValue': !Sub '${VpcModule}-SubnetIds${SubnetsReach}'}]
      TaskDefinition: !Ref TaskDefinition
  ScalableTargetRole: # based on http://docs.aws.amazon.com/AmazonECS/latest/developerguide/autoscale_IAM_role.html
    Condition: HasAutoScaling
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'application-autoscaling.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: AmazonEC2ContainerServiceAutoscaleRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'ecs:DescribeServices'
            - 'ecs:UpdateService'
            Resource: '*'
      - PolicyName: cloudwatch
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'cloudwatch:DescribeAlarms'
            Resource: '*'
  ScalableTarget:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalableTarget'
    Properties:
      MaxCapacity: !Ref MaxCapacity
      MinCapacity: !Ref MinCapacity
      ResourceId: !Sub
      - 'service/${Cluster}/${Service}'
      - Cluster: !If [HasClusterModule, {'Fn::ImportValue': !Sub '${ClusterModule}-Name'}, !Ref Cluster]
        Service: !GetAtt 'Service.Name'
      RoleARN: !GetAtt 'ScalableTargetRole.Arn'
      ScalableDimension: 'ecs:service:DesiredCount'
      ServiceNamespace: ecs
  ScaleUpPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-up'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 300
        MinAdjustmentMagnitude: 1
        StepAdjustments:
        - MetricIntervalLowerBound: 0
          ScalingAdjustment: 25
  ScaleDownPolicy:
    Condition: HasAutoScaling
    Type: 'AWS::ApplicationAutoScaling::ScalingPolicy'
    Properties:
      PolicyName: !Sub '${AWS::StackName}-scale-down'
      PolicyType: StepScaling
      ScalingTargetId: !Ref ScalableTarget
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 300
        MinAdjustmentMagnitude: 1
        StepAdjustments:
        - MetricIntervalUpperBound: 0
          ScalingAdjustment: -25
  CPUUtilizationTooHighAlarm:
    Condition: HasAlertingModule
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average CPU utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/ECS'
      Dimensions:
      - Name: ClusterName
        Value: !If [HasClusterModule, {'Fn::ImportValue': !Sub '${ClusterModule}-Name'}, !Ref Cluster]
      - Name: ServiceName
        Value: !GetAtt 'Service.Name'
      MetricName: CPUUtilization
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 80
      AlarmActions:
      - {'Fn::ImportValue': !Sub '${AlertingModule}-Arn'}
  CPUUtilizationHighAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Service is running out of CPU'
      Namespace: 'AWS/ECS'
      Dimensions:
      - Name: ClusterName
        Value: !If [HasClusterModule, {'Fn::ImportValue': !Sub '${ClusterModule}-Name'}, !Ref Cluster]
      - Name: ServiceName
        Value: !GetAtt 'Service.Name'
      MetricName: CPUUtilization
      ComparisonOperator: GreaterThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 1
      Threshold: 60
      AlarmActions:
      - !Ref ScaleUpPolicy
  CPUUtilizationLowAlarm:
    Condition: HasAutoScaling
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Service is wasting CPU'
      Namespace: 'AWS/ECS'
      Dimensions:
      - Name: ClusterName
        Value: !If [HasClusterModule, {'Fn::ImportValue': !Sub '${ClusterModule}-Name'}, !Ref Cluster]
      - Name: ServiceName
        Value: !GetAtt 'Service.Name'
      MetricName: CPUUtilization
      ComparisonOperator: LessThanThreshold
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 30
      AlarmActions:
      - !Ref ScaleDownPolicy
Outputs:
  ModuleId:
    Value: 'fargate-service'
  ModuleVersion:
    Value: '2.1.0'
  StackName:
    Value: !Ref 'AWS::StackName'
  TaskRoleArn:
    Value: !GetAtt 'TaskRole.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-TaskRoleArn'
